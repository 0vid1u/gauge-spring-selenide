# gauge.properties
# properties set here will be available to the test execution as environment variables
#
# sample_key = sample_value
#
# The path to the gauge reports directory. Should be either relative to the project directory or an absolute path
gauge_reports_dir = reports
#
# Set as false if gauge reports should not be overwritten on each execution. A new time-stamped directory will be created on each execution.
overwrite_reports = true
#
# The path to the gauge html report theme [src/main/resources/html-report-themes/default]
#GAUGE_HTML_REPORT_THEME_PATH=src/main/resources/html-report-themes
#
# Set to false to disable screenshots on failure in reports.
screenshot_on_failure = true
#
# The path to the gauge logs directory. Should be either relative to the project directory or an absolute path
logs_directory = logs
#
# Set to true to use multithreading for parallel execution
enable_multithreading = false
#
# The path the gauge specifications directory. Takes a comma separated list of specification files/directories.
gauge_specs_dir = specs
#
# The default delimiter used read csv files.
csv_delimiter = ,
#
# Allows steps to be written in multiline
allow_multiline_step = false
#
# specify the package scanned by reflection
package_to_scan=my.company.gauge.hooks,my.company.gauge.steps
#
# Specify an alternate Java home if you want to use a custom version
gauge_java_home =
#
# IntelliJ and Eclipse out directory will be usually autodetected
# Use the below property if you need to override the build path
gauge_custom_build_path =
#
# specify the directory where additional libs are kept
# you can specify multiple directory names separated with a comma (,)
gauge_additional_libs = libs/*
#
# JVM arguments passed to java while launching. Enter multiple values separated by comma (,) eg. Xmx1024m, Xms128m
gauge_jvm_args =
#
# specify the directory containing java files to be compiled
# you can specify multiple directory names separated with a comma (,)
gauge_custom_compile_dir =
#
# specify the level at which the objects should be cleared
# Possible values are suite, spec and scenario. Default value is scenario.
gauge_clear_state_level = scenario
#
# set to a url, which acts as plugin com.concardis.repository for Gauge.
gauge_repository_url=https://downloads.getgauge.io/plugin
#
# set to a url, which holds version information of Gauge.
# This is used to determine if an update is available.
gauge_update_url=https://downloads.getgauge.io/gauge
#
# set to an url, which acts as template com.concardis.repository for Gauge.
gauge_templates_url=https://downloads.getgauge.io/templates
#
# sets the timeout in milliseconds for making a
# connection to the language runner.
runner_connection_timeout=500000
#
# sets the timeout in milliseconds for making a connection
# to plugins (except language runner plugins).
plugin_connection_timeout=200000
#
# sets the timeout in milliseconds for a plugin to stop
# after a kill message has been sent.
plugin_kill_timeout=200000
#
# sets the timeout in milliseconds for requests from the
# language runner.
# If the size of the project is too big, Gauge may timeout before the
# runner returns the response message. This value can be configured
# accordingly.
runner_request_timeout=500000